.container {
  max-width: $grid-container-width;
  width: 100%;
  margin-left: auto;
  margin-right: auto;

  @each $breakpoint in map-keys($grid-gutters) {
    @include media($breakpoint) {
      $gutter: map-get($grid-gutters, $breakpoint);
      padding-right: ($gutter / 2);
      padding-left:  ($gutter / 2);
    }
  }
}

.row {
  display: flex;
  flex-wrap: wrap;

  @each $breakpoint in map-keys($grid-gutters) {
    @include media($breakpoint) {
      $gutter: map-get($grid-gutters, $breakpoint);
      margin-right: ($gutter / -2);
      margin-left:  ($gutter / -2);
    }
  }
}

.row--no-gutters {
  margin-left: 0;
  margin-right: 0;

  > [class^="col-"] {
    padding-right: 0;
    padding-left: 0;
  }
}

.row--dividers {

  > [class^="col-"]:not(:last-of-type) {
    border-bottom: 1px solid $line-gray;
    margin-bottom: 20px;
    margin-top: 20px;

    @include media(md) {
      border-bottom: 0;
      margin-bottom: 0;
      margin-top: 0;
      border-right: 1px solid $line-gray;
    }
  }
}

.row--dividers-light {
  > [class^="col-"]:not(:last-of-type) {
    border-color: $brand-secondary-dark;
  }
}

[class^="col-"] {
  position: relative;
  width: 100%;
  min-height: 1px;

  @each $breakpoint in map-keys($grid-gutters) {
    @include media($breakpoint) {
      $gutter: map-get($grid-gutters, $breakpoint);
      padding-right: ($gutter / 2);
      padding-left:  ($gutter / 2);
    }
  }
}

.flex-first {
  order: -1;
}

.flex-last {
  order: 1;
}

@mixin order($size) {
  .flex-#{$size}-first {
    order: -1;
  }
  .flex-#{$size}-last {
    order: 1;
  }
}

@mixin grid($size, $columns: 12) {
  @for $index from 1 through $columns {
    .col-#{$size}-#{$index} {
      flex: 0 0 percentage($index / $columns);
      max-width: percentage($index / $columns);
    }
  }
}

// @mixin push($size, $columns: 12) {
//   @for $index from 1 through $columns {
//     .#{$grid-prefix}#{$size}-push-#{$index} {
//       left: percentage(($index / $columns));
//     }
//   }
// }

// @mixin pull($size, $columns: 12) {
//   @for $index from 1 through $columns {
//     .#{$grid-prefix}#{$size}-pull-#{$index} {
//       right: percentage(($index / $columns));
//     }
//   }
// }

@each $breakpoint-name, $breakpoint-size in $breakpoints {

  // @if $breakpoint-name == "xs" {

    // @include grid($breakpoint-name, $grid-columns);
    // @include push($breakpoint-name, $grid-columns);
    // @include pull($breakpoint-name, $grid-columns);

  // } @else {

    @include media($breakpoint-name) {

      @include grid($breakpoint-name, $grid-column-count);
      // @include push($breakpoint-name, $grid-columns);
      // @include pull($breakpoint-name, $grid-columns);
      @include order($breakpoint-name);

    }
  // }

}
