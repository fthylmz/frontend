.container {
  @include make-container();

  @include media(lg) {
    // padding-left: 60px;
    // padding-right: 60px;
  }
}

.row {
  @include make-row();
  // TODO: need a util for where this is needed? mostly around callouts
  // height: 100%;
}

.row--no-gutters {
  margin-left: 0;
  margin-right: 0;

  > [class^='col'] {
    padding-right: 0;
    padding-left: 0;
  }
}

.row--dividers {
  > [class^='col']:not(:last-of-type) {
    border-bottom: 1px solid $line-gray;
    padding-bottom: 50px;
    margin-bottom: 50px;
  }

  @include media(md) {
    > [class^='col']:not(:last-of-type) {
      border-bottom: 0;
      border-right: 1px solid $line-gray;
      padding-bottom: 0;
      margin-bottom: 0;
    }
  }
}

.row--dividers-reverse {
  > [class^='col']:not(:last-of-type) {
    border-left: 1px solid $line-gray;
  }
}

.row--dividers-light {
  > [class^='col']:not(:last-of-type) {
    border-color: $brand-secondary-dark;
  }
}

[class^='col'] {
  @include make-col-ready();
}

.col--collapse {
  padding-left: 0;
  padding-right: 0;
}

.flex-first {
  order: -1;
}

.flex-last {
  order: 1;
}

@mixin order($size) {
  .flex-#{$size}-first {
    order: -1;
  }
  .flex-#{$size}-last {
    order: 1;
  }
}

@mixin grid($size, $columns: $grid-columns) {
  @for $index from 1 through $columns {
    .col-#{$size}-#{$index} {
      @include make-col($index);
    }
  }
}

@mixin push($size, $columns: $grid-columns) {
  @for $index from 1 through $columns {
    .col-#{$size}-push-#{$index} {
      @include make-col-push($index);
    }
  }
}

@mixin pull($size, $columns: $grid-columns) {
  @for $index from 1 through $columns {
    .col-#{$size}-pull-#{$index} {
      @include make-col-pull($index);
    }
  }
}

@each $name, $size in $grid-breakpoints {
  @include media($name) {
    @include grid($name);
    @include push($name);
    @include pull($name);
    @include order($name);
  }
}
